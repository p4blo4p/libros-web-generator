# .github/workflows/test-specific-parts.yml
# ... (on: workflow_dispatch: inputs: ... sin cambios en los defaults aquí por ahora) ...
# ...
    # .github/workflows/test-specific-parts.yml
# ... (on: workflow_dispatch: inputs: ... sin cambios en los defaults aquí por ahora) ...
# ...
    env:
      FORCE_REGENERATE_FLAG_CMD: ${{ github.event.inputs.force_regenerate_test == 'true' && '--force-regenerate' || '' }}
      INPUT_LANG: ${{ github.event.inputs.test_language }}
      INPUT_CHAR_KEY: ${{ github.event.inputs.test_char_key }}
      DEFAULT_TEST_LANG_IF_CHAR_KEY_PRESENT: 'es' # Idioma por defecto si se usa char_key sin lang
      # ...
    run: |
      set -e
      
      COMMAND_ARGS=""
      EFFECTIVE_LANG="$INPUT_LANG"
      EFFECTIVE_CHAR_KEY="$INPUT_CHAR_KEY"

      # Si se proporciona un char_key pero no un idioma, usar un idioma por defecto para el test.
      if [[ -n "$EFFECTIVE_CHAR_KEY" && -z "$EFFECTIVE_LANG" ]]; then
        echo "Advertencia: Se proporcionó test_char_key ('$EFFECTIVE_CHAR_KEY') sin test_language. Usando idioma por defecto para test: '$DEFAULT_TEST_LANG_IF_CHAR_KEY_PRESENT'."
        EFFECTIVE_LANG="$DEFAULT_TEST_LANG_IF_CHAR_KEY_PRESENT"
      fi

      # Ahora construir los argumentos basados en los valores efectivos
      if [[ -n "$EFFECTIVE_LANG" ]]; then
        COMMAND_ARGS="$COMMAND_ARGS --language $EFFECTIVE_LANG"
        # Solo añadir --char-key si EFFECTIVE_CHAR_KEY también está presente
        if [[ -n "$EFFECTIVE_CHAR_KEY" ]]; then
          COMMAND_ARGS="$COMMAND_ARGS --char-key $EFFECTIVE_CHAR_KEY"
        fi
      else
        # Si EFFECTIVE_LANG sigue vacío, significa que ni INPUT_LANG ni un default por char_key se aplicaron.
        # En este caso, no se pasa ni --language ni --char-key.
        echo "EFFECTIVE_LANG está vacío. generate_static.py se ejecutará para todos los idiomas sin filtro de char_key."
      fi
      
      echo "Running: python generate_static.py $COMMAND_ARGS $FORCE_REGENERATE_FLAG_CMD"
      python generate_static.py $COMMAND_ARGS $FORCE_REGENERATE_FLAG_CMD
      
      echo "Static site generation for specific slice finished."
    run: |
      set -e
      
      COMMAND_ARGS=""
      EFFECTIVE_LANG="$INPUT_LANG"
      EFFECTIVE_CHAR_KEY="$INPUT_CHAR_KEY"

      # Si se proporciona un char_key pero no un idioma, usar un idioma por defecto para el test.
      if [[ -n "$EFFECTIVE_CHAR_KEY" && -z "$EFFECTIVE_LANG" ]]; then
        echo "Advertencia: Se proporcionó test_char_key ('$EFFECTIVE_CHAR_KEY') sin test_language. Usando idioma por defecto para test: '$DEFAULT_TEST_LANG_IF_CHAR_KEY_PRESENT'."
        EFFECTIVE_LANG="$DEFAULT_TEST_LANG_IF_CHAR_KEY_PRESENT"
      fi

      # Ahora construir los argumentos basados en los valores efectivos
      if [[ -n "$EFFECTIVE_LANG" ]]; then
        COMMAND_ARGS="$COMMAND_ARGS --language $EFFECTIVE_LANG"
        # Solo añadir --char-key si EFFECTIVE_CHAR_KEY también está presente
        if [[ -n "$EFFECTIVE_CHAR_KEY" ]]; then
          COMMAND_ARGS="$COMMAND_ARGS --char-key $EFFECTIVE_CHAR_KEY"
        fi
      else
        # Si EFFECTIVE_LANG sigue vacío, significa que ni INPUT_LANG ni un default por char_key se aplicaron.
        # En este caso, no se pasa ni --language ni --char-key.
        echo "EFFECTIVE_LANG está vacío. generate_static.py se ejecutará para todos los idiomas sin filtro de char_key."
      fi
      
      echo "Running: python generate_static.py $COMMAND_ARGS $FORCE_REGENERATE_FLAG_CMD"
      python generate_static.py $COMMAND_ARGS $FORCE_REGENERATE_FLAG_CMD
      
      echo "Static site generation for specific slice finished."
