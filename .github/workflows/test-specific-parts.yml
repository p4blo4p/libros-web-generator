
# .github/workflows/test-specific-parts.yml
name: Test Specific Parts of Generation

on:
  push:
    branches: [ "large-data-optimization" ] # Consider changing to "main" or your primary branch
  workflow_dispatch: # Para ejecución manual
    inputs:
      force_regenerate_test:
        description: 'Forzar regeneración para este test (ignora manifest)'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: read # Suficiente para generar, pero si necesitas escribir caché de manifest, cámbialo

jobs:
  test_setup_and_lint:
    name: Setup, Cache & Lint (Test)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # Usar una clave de caché diferente para el workflow de testeo
          key: ${{ runner.os }}-pip-test-specific-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-specific-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          echo "Running Flake8 (strict pass for E9,F63,F7,F82)..."
          flake8 . --count --select=E9,F63,F7,F82 --format=pylint --statistics || exit 1
          echo "Running Flake8 (style and complexity pass)..."
          # Descomenta la siguiente línea si quieres ejecutar la segunda pasada de Flake8
          # flake8 . --count --format=pylint --statistics

  test_generate_es_authors_z:
    name: Test Generate - Spanish Authors starting with Z
    runs-on: ubuntu-latest
    needs: test_setup_and_lint # Asegura que el linting pase primero (opcional para testeo rápido)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-specific-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-specific-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Para este test específico, la caché del manifest podría no ser crucial
      # o podrías querer una clave de caché de manifest diferente para no interferir
      # con la caché del manifest de tu workflow principal.
      # Por simplicidad, aquí inicializamos uno vacío si no existe.
      - name: Initialize manifest if not found (for testing)
        run: |
          if [ ! -d ".cache" ]; then mkdir -p .cache; fi
          if [ ! -f ".cache/generation_manifest.json" ]; then
            echo "Test manifest not found, creating empty for this job."
            echo "{}" > .cache/generation_manifest.json
          fi

      - name: Generate static site for Spanish language (focus on Z authors)
        env:
          # El input ahora se llama force_regenerate_test para evitar confusión con el input del workflow principal
          FORCE_REGENERATE_FLAG: ${{ github.event.inputs.force_regenerate_test == 'true' && '--force-regenerate' || '' }}
        run: |
          set -e
          echo "Running static site generator for language: es"
          # Si tu script SOPORTA generar solo para una letra/char_key:
          # python generate_static.py --language es --char-key z $FORCE_REGENERATE_FLAG
          # Si tu script NO soporta generar solo para una letra/char_key,
          # entonces generará todo para 'es'. Inspeccionarás el artefacto.
          python generate_static.py --language es $FORCE_REGENERATE_FLAG
          echo "Static site generation for 'es' (testing Z authors) finished."

      - name: Upload Spanish language slice artifact (for Z authors test)
        uses: actions/upload-artifact@v4
        with:
          name: test-site-slice-es-authors-z
          path: _site/  # Sube todo el _site generado para 'es'
          if-no-files-found: error
          retention-days: 1 # Retención corta para artefactos de testeo
