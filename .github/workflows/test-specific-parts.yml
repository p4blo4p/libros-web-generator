# .github/workflows/test-specific-parts.yml
name: Test Specific Parts of Generation

on:
  workflow_dispatch: # Para ejecución manual
    inputs:
      force_regenerate_test:
        description: 'Forzar regeneración para este test (ignora manifest)'
        required: false
        default: 'false'
        type: boolean
      test_language:
        description: 'Idioma para testear (ej. es, en). Requerido si se usa test_char_key.'
        required: false
        default: 'es' # Default a 'es' para tu caso de uso
        type: string
      test_char_key:
        description: 'Clave de carácter para testear (ej. z, a, 0). Opcional.'
        required: false
        default: 'z' # Default a 'z' para tu caso de uso
        type: string


permissions:
  contents: read

jobs:
  test_lint_setup_only: # Renombrado para claridad, ya que solo hace lint y setup
    name: Setup, Cache & Lint (Test)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-specific-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-specific-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          echo "Running Flake8 (strict pass for E9,F63,F7,F82)..."
          flake8 . --count --select=E9,F63,F7,F82 --format=pylint --statistics || exit 1
          echo "Running Flake8 (style and complexity pass)..."
          flake8 . --count --format=pylint --statistics # Descomentado para un lint completo

  test_generate_specific_slice:
    name: Test Generate - Lang ${{ github.event.inputs.test_language }} / Char Key ${{ github.event.inputs.test_char_key || 'ALL' }}
    runs-on: ubuntu-latest
    # needs: test_lint_setup_only # Puedes descomentar si quieres que el lint pase primero
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-specific-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-specific-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Initialize manifest (for testing, could be more robust with specific cache key)
        run: |
          if [ ! -d ".cache" ]; then mkdir -p .cache; fi
          if [ ! -f ".cache/generation_manifest.json" ]; then
            echo "Test manifest not found, creating empty for this job."
            echo "{}" > .cache/generation_manifest.json
          else
            echo "Existing manifest found, will be used/updated by generate_static.py"
          fi

      - name: Generate static site for specific slice
        env:
          FORCE_REGENERATE_FLAG: ${{ github.event.inputs.force_regenerate_test == 'true' && '--force-regenerate' || '' }}
          TARGET_LANG: ${{ github.event.inputs.test_language }}
          TARGET_CHAR_KEY: ${{ github.event.inputs.test_char_key }}
        run: |
          set -e
          echo "Running static site generator for language: $TARGET_LANG, char_key: $TARGET_CHAR_KEY"
          
          COMMAND_ARGS="--language $TARGET_LANG"
          if [[ -n "$TARGET_CHAR_KEY" ]]; then
            COMMAND_ARGS="$COMMAND_ARGS --char-key $TARGET_CHAR_KEY"
          fi
          
          python generate_static.py $COMMAND_ARGS $FORCE_REGENERATE_FLAG
          
          echo "Static site generation for specific slice finished."

      - name: Upload specific slice artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-site-slice-${{ github.event.inputs.test_language }}-${{ github.event.inputs.test_char_key || 'allchars' }}
          path: _site/
          if-no-files-found: error # Cambiado a error si no se encuentran archivos
          retention-days: 1
