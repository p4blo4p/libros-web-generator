# .github/workflows/build_and_test.yml (or a more descriptive name)

name: Build, Test, and Generate Static Site

on:
  push:
    branches: [ "main" ] # Or "main" if that's your default branch
  pull_request:
    branches: [ "main" ] # Or "main"
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read # Default, sufficient for checkout

jobs:
  build-test-generate: # A more descriptive job name
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5 # Use a more recent version
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install tools for linting/testing if you want them in this workflow
        pip install flake8 pytest 
        # Install application dependencies
        if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "requirements.txt not found"; exit 1; fi
      # Consider adding caching for dependencies for faster builds
      # - name: Cache pip dependencies
      #   uses: actions/cache@v4 # Use latest cache action
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # Continue even if linting fails? If not, remove --exit-zero from the second command or add `|| exit 1`
      # Or, better, let flake8 exit with non-zero on error for the first command and remove the second if you want it to fail the build.

    - name: Test with pytest
      run: |
        pytest
      # If tests fail, the workflow will stop here by default, which is usually desired.

    - name: Generate static site
      run: python generate_static.py
      # If your script requires any environment variables, set them here or use GitHub Secrets
      # env:
      #   FLASK_ENV: production 

    - name: Upload static site artifact
      uses: actions/upload-artifact@v4 # Use latest artifact action
      with:
        name: static-site-files # Name of the artifact
        path: _site/ # Path to the directory to upload
        if-no-files-found: error # Fail the workflow if _site is not found or empty
